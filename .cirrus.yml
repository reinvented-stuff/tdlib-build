---

macos_instance:
  image: ghcr.io/cirruslabs/macos-ventura-base:latest

prepare_and_build_task:
  name: Prepare environment and build
  only_if: $CIRRUS_BRANCH =~ 'build_.*|dev-artifacts-in-google-bucket'
  environment:
    GCLOUD_VERSION: 443.0.0
    GCP_SA_KEY: ENCRYPTED[!83a845167a69fcdeff764334c5f21172f3523786d185566af2664b18f91e50ab0e34ec519f368c848f856ad72cdb8e32!]
    GCP_BUCKET_NAME: ENCRYPTED[!a63827fa8915e21956f3d7ff574ee08ea3fe92007f5397d6ac7998aea04d5394319220b650afea04d99da10780c2a5be!]
    ARTIFACT_TARGZ_NAME: ""
    APP_NAME: tdlib
    ARCH: arm64
    OS: macos13

  fetch_version_script:
    - export PLANNED_VERSION=$( cat .version )
    - export ARTIFACT_TARGZ_NAME="${APP_NAME}-${PLANNED_VERSION}-${OS}-${ARCH}.tar.gz"
    - echo "export PLANNED_VERSION='${PLANNED_VERSION}'" >> ~/.zshrc
    - echo "export ARTIFACT_TARGZ_NAME='${ARTIFACT_TARGZ_NAME}'" >> ~/.zshrc

  install_dependencies_script:
    - source ~/.zshrc
    - bash sbin/macos-13/install-dependencies.sh

  upload_artifacts_dependencies_script:
    - source ~/.zshrc
    - curl -o "google-cloud-cli-${GCLOUD_VERSION}-linux-arm.tar.gz" "https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-${GCLOUD_VERSION}-linux-arm.tar.gz"
    - tar -xf "google-cloud-cli-${GCLOUD_VERSION}-linux-x86.tar.gz"
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1 bash ./google-cloud-sdk/install.sh
    - echo "${GCP_SA_KEY}" > svc-tdlib-github-rw@tdlib-396418.iam.gserviceaccount.com.json
    - gcloud auth activate-service-account --key-file=svc-tdlib-github-rw@tdlib-396418.iam.gserviceaccount.com.json
    - gcloud auth list
    - echo "GCP_OAUTH2_TOKEN=$(gcloud auth print-access-token)" >> ~/.zshrc

  checkout_td_script: 
    - source ~/.zshrc
    - mkdir -pv td
    - git clone https://github.com/tdlib/td.git td
    - ls -lAth .

  build_td_script:
    - source ~/.zshrc
    - bash "sbin/macos-13/build.sh"

  prepare_artifacts_script:
    - source ~/.zshrc
    - mkdir -v "dist"
    - mv -v td/tdlib "dist/"
    - tar -zvcf "${ARTIFACT_TARGZ_NAME}" "dist"

  upload_artifacts_script:
    - source ~/.zshrc
    - >-
      curl
      -X PUT
      -H "Authorization: Bearer ${GCP_OAUTH2_TOKEN}"
      -T "${ARTIFACT_TARGZ_NAME}"
      "https://storage.googleapis.com/${GCP_BUCKET_NAME}/${ARTIFACT_TARGZ_NAME}"

  list_artifacts_script:
    - source ~/.zshrc
    - >-
      curl
      -o list_artifacts_result.json
      -X GET
      -H "Content-Type: application/json"
      "https://www.googleapis.com/storage/v1/b/${GCP_BUCKET_NAME}/o/"

  results_printout_script:
    - jq < list_artifacts_result.json
    - jq -r '.items[].mediaLink' < list_artifacts_result.json


prepare_and_build_docker_task:
  name: Prepare environment and build Docker image
  only_if: $CIRRUS_BRANCH =~ 'build_arm64_.*'
  environment:
    APP_NAME: tdlib
    ARCH: arm64
    OS: macos13
    DOCKER_OS: alpine-3.18
    DOCKER_PASSWORD: ENCRYPTED[!50d4dbf82dca3a7fead72baadcd3bd2e2e1f9d5448d3bf4e8d6ce2769d412550fa03457a77784a282e3d2b70fd36f5b6!]
    DOCKER_USERNAME: ENCRYPTED[!25aff238fdea08accc0f3d8444ac675374a157781f6d75c4d47ce1966f00d48901a2b22141964345dc07800383b470e2!]

  fetch_version_script:
    - export PLANNED_VERSION=$( cat .version )
    - echo "export PLANNED_VERSION='${PLANNED_VERSION}'" >> ~/.zshrc

  install_dependencies_script:
    - source ~/.zshrc
    - bash sbin/macos-13/install-dependencies-docker.sh

  build_docker_image_script:
    - source ~/.zshrc
    - cd "docker/${DOCKER_OS}"

    - >
      echo "${DOCKER_PASSWORD}" |
      docker login "docker.io"
      -u "${DOCKER_USERNAME}"
      --password-stdin

    - >
      docker build
      --tag "docker.io/reinvented_stuff/tdlib:${PLANNED_VERSION}-${DOCKER_OS}"
      --build-arg BUILD_VERSION="${PLANNED_VERSION}-${DOCKER_OS}"
      --file Dockerfile
      .
    - docker push docker.io/reinvented_stuff/tdlib

...
