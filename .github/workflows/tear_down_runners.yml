---
# yamllint disable rule:line-length
# yamllint disable rule:truthy

name: Tear down runners

on: workflow_dispatch

jobs:

  notify_started:
    name: Send notification on start
    runs-on: ubuntu-latest

    steps:

      - name: Send notification on start
        uses: rest-gateway/notification-action@1.0.9
        with:
          message: |
            <b>Workflow:</b> <code>${GITHUB_WORKFLOW}</code>
            <b>Repository:</b> ${GITHUB_REPOSITORY} (${GITHUB_REF#refs/heads/})
            <b>URL:</b> <code>https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}</code>
          recipient: "${{ secrets.NOTIFICATIONS_DEFAULT_RECIPIENT }}"
          rest_gateway_url: "${{ secrets.REST_GATEWAY_API_URL }}"
          rest_gateway_token: "${{ secrets.REST_GATEWAY_TOKEN }}"
          rest_gateway_bot_name: "${{ secrets.REST_GATEWAY_BOT_NAME }}"


  tear_down_runners:
    name: Tear down GitHub runners
    runs-on: ubuntu-latest

    steps:

      - name: Check out this repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.11


      - name: Render SSH private key from a secret
        id: ssh_private_key
        shell: bash
        working-directory: infra/terraform
        run: >-
          echo "${{ secrets.VULTR_RSA_PRIVATE_KEY }}" > ./id_rsa


      - name: Terraform init
        id: terraform_init
        shell: bash
        working-directory: infra/terraform
        env:
          TF_VAR_vultr_api_key: "${{ secrets.VULTR_API_KEY }}"
          TF_VAR_github_runners_count: 0
        run: >-
          export TF_VAR_ansible_ghr_token=$( cat "${{ steps.get_ghr_token.outputs.token_filename }}" )

          terraform init
          -backend-config="endpoint=${{ secrets.S3_ENDPOINT }}"
          -backend-config="access_key=${{ secrets.S3_ACCESS_KEY }}"
          -backend-config="secret_key=${{ secrets.S3_SECRET_KEY }}"


      - name: Terraform plan
        id: terraform_plan
        shell: bash
        working-directory: infra/terraform
        env:
          TF_VAR_vultr_api_key: "${{ secrets.VULTR_API_KEY }}"
          TF_VAR_github_runners_count: 0
        run: >-
          export TF_VAR_ansible_ghr_token=$( cat "${{ steps.get_ghr_token.outputs.token_filename }}" )

          terraform plan


      - name: Terraform apply
        id: terraform_apply
        shell: bash
        working-directory: infra/terraform
        env:
          TF_VAR_vultr_api_key: "${{ secrets.VULTR_API_KEY }}"
          TF_VAR_github_runners_count: 0
        run: >-
          export TF_VAR_ansible_ghr_token=$( cat "${{ steps.get_ghr_token.outputs.token_filename }}" )

          terraform apply -auto-approve -no-color 2>&1 > terraform_apply.log


      - name: Terraform show
        id: terraform_show
        shell: bash
        working-directory: infra/terraform
        continue-on-error: true
        env:
          TF_VAR_vultr_api_key: "${{ secrets.VULTR_API_KEY }}"
          TF_VAR_github_runners_count: 0
        run: |
          terraform show -json


      - name: Parse terraform show output
        id: parse_terraform_show
        shell: bash
        working-directory: infra/terraform
        continue-on-error: true
        run: |
          cat <<EOF > outputs.json
          ${{ steps.terraform_show.outputs.stdout }}
          EOF

          cat <<EOF >> "${GITHUB_OUTPUT}"
          instances<<EOF2
          $( cat outputs.json | jq -r '.values.outputs."instance-details".value[][] | .name + "\n" + .ipv4 + "\n" + .ipv6 + "\n"' )
          EOF2
          EOF


      - name: Send notification with terraform outputs
        uses: rest-gateway/notification-action@1.0.9
        if: always()
        with:
          message: |
            <b>Workflow:</b> <code>${GITHUB_WORKFLOW}</code>
            <b>Repository:</b> ${GITHUB_REPOSITORY} (${GITHUB_REF#refs/heads/})
            <b>URL:</b> <code>https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}</code>

            <b>Instances:</b>
            ${{ steps.parse_terraform_show.outputs.instances }}

            <b>Outcome:</b>
            terraform init: ${{ steps.terraform_init.outcome }}
            terraform plan: ${{ steps.terraform_plan.outcome }}
            terraform apply: ${{ steps.terraform_apply.outcome }}

          recipient: "${{ secrets.NOTIFICATIONS_DEFAULT_RECIPIENT }}"
          rest_gateway_url: "${{ secrets.REST_GATEWAY_API_URL }}"
          rest_gateway_token: "${{ secrets.REST_GATEWAY_TOKEN }}"
          rest_gateway_bot_name: "${{ secrets.REST_GATEWAY_BOT_NAME }}"


      - name: Upload terraform apply log
        uses: actions/upload-artifact@v4
        id: upload_terraform_apply_log
        if: always()
        with:
          name: "terraform_apply.log"
          path: "infra/terraform/terraform_apply.log"
          if-no-files-found: error
          retention-days: 90


      - name: Upload terraform show result
        uses: actions/upload-artifact@v4
        id: upload_terraform_show_result
        if: always()
        with:
          name: "outputs.json"
          path: "infra/terraform/outputs.json"
          if-no-files-found: error
          retention-days: 90


  after_build:
    name: Send notification on finish
    runs-on: ubuntu-latest

    if: always()

    needs:
      - tear_down_runners

    steps:

      - name: Send notification on finish
        uses: rest-gateway/notification-action@1.0.9
        with:
          message: |
            <b>Workflow:</b>   ${GITHUB_WORKFLOW}
            <b>Repository:</b> ${GITHUB_REPOSITORY}

            <b>Tear down results:</b>
            Status: ${{ needs.tear_down_runners.outputs.job_status }}

          recipient: "${{ secrets.NOTIFICATIONS_DEFAULT_RECIPIENT }}"
          rest_gateway_url: "${{ secrets.REST_GATEWAY_API_URL }}"
          rest_gateway_token: "${{ secrets.REST_GATEWAY_TOKEN }}"
          rest_gateway_bot_name: "${{ secrets.REST_GATEWAY_BOT_NAME }}"


...
